= Leaf

A _really_ simple pagination library, heavily based on the agnostic branch of
{will_paginate}[http://github.com/mislav/will_paginate/tree/agnostic].

= Description

Leaf supports pagination for collections responding to +total_pages+, 
+per_page+, +previous_page+ and +total_entries+ in Sinatra views out of the box.

The view helper +page_entries_info+ currently supports two languages: English 
and Swedish via the {i18n}[http://github.com/svenfuchs/i18n] library.

== Installation

  gem install leaf

== Example usage

  require 'rubygems'
  require 'sinatra'
  require 'leaf'

  include Leaf::ViewHelpers::Base

  # Needed to paginate any array, you’ll probably use something else.
  require 'leaf/array'

  get '/' do
    page = (params[:page]) ? params[:page] : 1
    array = ('a'..'z').to_a

    haml :index, :locals => { 
      :collection => array.paginate({:page => page, :per_page => 5}) 
    }
  end

  __END__
  @@ index
  = leaf(collection)
  %ul
    - collection.each do |letter|
      %li= letter

== Authors and credits

Leaf is based on {will_paginate}[http://github.com/mislav/will_paginate/] which 
was originally written by PJ Hyett, who later handed over development to Mislav 
Marohnić. (The library was completely rewritten since then.)